# 风格
1 名字
一个变量的作用域越大，它的名字所携带的信息就应该越多。
全局变量使用具有说明性的名字，局部变量用短名字。
根据定义，全局变量可以出现在整个程序中的任何地方，因此它们的名字应该足够长，具有足够的说明性，以便使读者能够记得
它们是干什么用的。给每个全局变量声明附一个简短注释也非常有帮助。

按常规方式使用的局部变量可以采用极短的名字。例如用 i、j作为循环变量，p、q作为
指针，s、t表示字符串等。

现实中存在许多命名约定或者本地习惯。常见的比如：
指针采用以 p结尾的变量名，例如nodep；
全局变量用大写开头的变量名，例如 G l o b a l；
常量用完全由大写字母拼写的变量名，如CONSTANTS等。
有些程序设计工场采用的规则更加彻底，他们要求把变量的类型和用途等都编排进变量名字中。
例如用 p c h说明这是一个字符指针，用 s t r T o和s t r F r o m表示它们分别是将要被读或者被写的字符串等。
至于名字本身的拼写形式，是使用 n p e n d i n g或n u m P e n d i n g还是n u m _ p e n d i n g，
这些不过是个人的喜好问题，与始终如一地坚持一种切合实际的约定相比，这些特殊规矩并不那么重要。

*** 保持一致性。
相关的东西应给以相关的名字，以说明它们的关系和差异。
*** 利用上下文
queue.queueCapacity ? 是多余的
queue.capacity //好的

*** 函数采用动作性的名字。函数名应当用动作性的动词，后面可以跟着名词

*** 对返回布尔类型值(真或者假)的函数命名，应该清楚地反映其返回值情况。
if(isoctal(c))
